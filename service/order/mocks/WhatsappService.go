// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Whatsapp is an autogenerated mock type for the Whatsapp type
type Whatsapp struct {
	mock.Mock
}

func (_m *Whatsapp) SendFilePdf(ctx context.Context, to, fileName, message, pdfFileBase64 string) error {
	ret := _m.Called(ctx, to, fileName, message, pdfFileBase64)
	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string, string) error); ok {
		r0 = rf(ctx, to, fileName, message, pdfFileBase64)
	}
	return r0
}

// SendMessage provides a mock function with given fields: ctx, to, message
func (_m *Whatsapp) SendMessage(ctx context.Context, to string, message string) error {
	ret := _m.Called(ctx, to, message)

	if len(ret) == 0 {
		panic("no return value specified for SendMessage")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, to, message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewWhatsapp creates a new instance of Whatsapp. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewWhatsapp(t interface {
	mock.TestingT
	Cleanup(func())
}) *Whatsapp {
	mock := &Whatsapp{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
